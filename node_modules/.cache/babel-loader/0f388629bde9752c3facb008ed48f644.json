{"ast":null,"code":"import { ordersAPI } from \"../api/api\";\nconst SET_ORDERS = 'SET_ORDERS';\nlet initialState = {\n  orders: [],\n  offset: 0,\n  limitOrders: 5\n};\n\nconst orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_ORDERS:\n      return { ...state,\n        orders: action.orders\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default orderReducer;\nexport const setOrders = orders => ({\n  type: SET_ORDERS,\n  orders\n}); // export const getOrders = () => (dispatch) =>{\n//     ordersAPI.getOrders().then(response => {\n//         dispatch(setOrderId(response.data));\n//     })\n// }\n\nexport const getOrders = (limitOrders, offset) => {\n  return dispatch => {\n    ordersAPI.getOrders(limitOrders, offset).then(data => {\n      debugger;\n      dispatch(setOrders(data)); // dispatch(setUsersTotalCount(data.totalCount))\n    });\n  };\n};","map":{"version":3,"names":["ordersAPI","SET_ORDERS","initialState","orders","offset","limitOrders","orderReducer","state","action","type","setOrders","getOrders","dispatch","then","data"],"sources":["/Users/anton_kamarhin/Desktop/study/p-2/food-delivery-fe/food-delivery-fe/src/redux/orders-reducer.js"],"sourcesContent":["import {ordersAPI} from \"../api/api\";\n\nconst SET_ORDERS = 'SET_ORDERS';\n\nlet initialState = {\n    orders: [],\n    offset: 0,\n    limitOrders: 5,\n}\n\nconst orderReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ORDERS :\n            return {...state, orders: action.orders}\n        default:\n            return state;\n    }\n}\n\nexport default orderReducer;\n\nexport const setOrders = (orders) => ({type: SET_ORDERS, orders})\n\n// export const getOrders = () => (dispatch) =>{\n//     ordersAPI.getOrders().then(response => {\n//         dispatch(setOrderId(response.data));\n//     })\n// }\n\nexport const getOrders= (limitOrders, offset) => {\n    return (dispatch) => {\n        ordersAPI.getOrders(limitOrders, offset).then(data => {\n            debugger\n            dispatch(setOrders(data))\n\n            // dispatch(setUsersTotalCount(data.totalCount))\n        })\n    }\n}\n"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AAEA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,EADO;EAEfC,MAAM,EAAE,CAFO;EAGfC,WAAW,EAAE;AAHE,CAAnB;;AAMA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBL,YAAyB;EAAA,IAAXM,MAAW;;EACnD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKR,UAAL;MACI,OAAO,EAAC,GAAGM,KAAJ;QAAWJ,MAAM,EAAEK,MAAM,CAACL;MAA1B,CAAP;;IACJ;MACI,OAAOI,KAAP;EAJR;AAMH,CAPD;;AASA,eAAeD,YAAf;AAEA,OAAO,MAAMI,SAAS,GAAIP,MAAD,KAAa;EAACM,IAAI,EAAER,UAAP;EAAmBE;AAAnB,CAAb,CAAlB,C,CAEP;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMQ,SAAS,GAAE,CAACN,WAAD,EAAcD,MAAd,KAAyB;EAC7C,OAAQQ,QAAD,IAAc;IACjBZ,SAAS,CAACW,SAAV,CAAoBN,WAApB,EAAiCD,MAAjC,EAAyCS,IAAzC,CAA8CC,IAAI,IAAI;MAClD;MACAF,QAAQ,CAACF,SAAS,CAACI,IAAD,CAAV,CAAR,CAFkD,CAIlD;IACH,CALD;EAMH,CAPD;AAQH,CATM"},"metadata":{},"sourceType":"module"}