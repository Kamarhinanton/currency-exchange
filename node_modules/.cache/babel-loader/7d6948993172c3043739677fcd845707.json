{"ast":null,"code":"import { ordersAPI } from \"../api/api\";\nconst SET_ORDERS = 'SET_ORDERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nlet initialState = {\n  orderId: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1\n};\n\nconst orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_ORDERS:\n      return { ...state,\n        orderId: action.orderId\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default orderReducer;\nexport const setOrderId = orderId => ({\n  type: SET_ORDERS,\n  orderId\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = count => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count\n});\nexport const getOrders = (currentPage, pageSize) => {\n  return dispatch => {\n    ordersAPI.getOrders(currentPage, pageSize).then(response => {\n      dispatch(setOrderId(response.data));\n      debugger;\n      dispatch(setUsersTotalCount(response.totalCount));\n    });\n  };\n}; // export const getUsers = (currentPage, pageSize) => {\n//     return (dispatch) => {\n//         dispatch(toggleIsFetching(true));\n//         usersAPI.getUsers(currentPage, pageSize).then(data => {\n//             dispatch(setUsers(data.items))\n//             dispatch(setUsersTotalCount(data.totalCount))\n//             dispatch(toggleIsFetching(false));\n//         })\n//     }\n// }","map":{"version":3,"names":["ordersAPI","SET_ORDERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","initialState","orderId","pageSize","totalUsersCount","currentPage","orderReducer","state","action","type","count","setOrderId","setCurrentPage","setUsersTotalCount","getOrders","dispatch","then","response","data","totalCount"],"sources":["/Users/anton_kamarhin/Desktop/study/p-2/food-delivery-fe/food-delivery-fe/src/redux/orders-reducer.js"],"sourcesContent":["import {ordersAPI} from \"../api/api\";\n\nconst SET_ORDERS = 'SET_ORDERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\n\nlet initialState = {\n    orderId: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n}\n\nconst orderReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ORDERS :\n            return {...state, orderId: action.orderId}\n        case SET_CURRENT_PAGE :\n            return {...state, currentPage: action.currentPage}\n        case SET_TOTAL_USERS_COUNT :\n            return {...state, totalUsersCount: action.count}\n        default:\n            return state;\n    }\n}\n\nexport default orderReducer;\n\nexport const setOrderId = (orderId) => ({type: SET_ORDERS, orderId})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setUsersTotalCount = (count) => ({type: SET_TOTAL_USERS_COUNT, count})\n\nexport const getOrders = (currentPage, pageSize) => {\n    return (dispatch) => {\n        ordersAPI.getOrders(currentPage, pageSize).then(response => {\n            dispatch(setOrderId(response.data));\n            debugger\n            dispatch(setUsersTotalCount(response.totalCount))\n        })\n    }\n}\n\n// export const getUsers = (currentPage, pageSize) => {\n//     return (dispatch) => {\n//         dispatch(toggleIsFetching(true));\n//         usersAPI.getUsers(currentPage, pageSize).then(data => {\n//             dispatch(setUsers(data.items))\n//             dispatch(setUsersTotalCount(data.totalCount))\n//             dispatch(toggleIsFetching(false));\n//         })\n//     }\n// }\n"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AAEA,IAAIC,YAAY,GAAG;EACfC,OAAO,EAAE,EADM;EAEfC,QAAQ,EAAE,CAFK;EAGfC,eAAe,EAAE,CAHF;EAIfC,WAAW,EAAE;AAJE,CAAnB;;AAOA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXO,MAAW;;EACnD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKX,UAAL;MACI,OAAO,EAAC,GAAGS,KAAJ;QAAWL,OAAO,EAAEM,MAAM,CAACN;MAA3B,CAAP;;IACJ,KAAKH,gBAAL;MACI,OAAO,EAAC,GAAGQ,KAAJ;QAAWF,WAAW,EAAEG,MAAM,CAACH;MAA/B,CAAP;;IACJ,KAAKL,qBAAL;MACI,OAAO,EAAC,GAAGO,KAAJ;QAAWH,eAAe,EAAEI,MAAM,CAACE;MAAnC,CAAP;;IACJ;MACI,OAAOH,KAAP;EARR;AAUH,CAXD;;AAaA,eAAeD,YAAf;AAEA,OAAO,MAAMK,UAAU,GAAIT,OAAD,KAAc;EAACO,IAAI,EAAEX,UAAP;EAAmBI;AAAnB,CAAd,CAAnB;AACP,OAAO,MAAMU,cAAc,GAAIP,WAAD,KAAkB;EAACI,IAAI,EAAEV,gBAAP;EAAyBM;AAAzB,CAAlB,CAAvB;AACP,OAAO,MAAMQ,kBAAkB,GAAIH,KAAD,KAAY;EAACD,IAAI,EAAET,qBAAP;EAA8BU;AAA9B,CAAZ,CAA3B;AAEP,OAAO,MAAMI,SAAS,GAAG,CAACT,WAAD,EAAcF,QAAd,KAA2B;EAChD,OAAQY,QAAD,IAAc;IACjBlB,SAAS,CAACiB,SAAV,CAAoBT,WAApB,EAAiCF,QAAjC,EAA2Ca,IAA3C,CAAgDC,QAAQ,IAAI;MACxDF,QAAQ,CAACJ,UAAU,CAACM,QAAQ,CAACC,IAAV,CAAX,CAAR;MACA;MACAH,QAAQ,CAACF,kBAAkB,CAACI,QAAQ,CAACE,UAAV,CAAnB,CAAR;IACH,CAJD;EAKH,CAND;AAOH,CARM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}